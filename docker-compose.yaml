version: "3"

networks:
  prusa:

volumes:
  prometheus_data:
  grafana_data:

services:
  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - prusa
    restart: always

  grafana:
    image: grafana/grafana:11.4.0
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_INSTALL_PLUGINS=grafana-xyzchart-panel, grafana-polystat-panel
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - prusa
    volumes:
      - ./docs/examples/config/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
      - ./docs/examples/grafana/provisioning:/var/lib/grafana/dashboards

  exporter:
    build: .
    container_name: exporter
    restart: unless-stopped
    volumes:
      - prusa_syslog_logs:/var/log/prusa
      - type: bind
        source: ./docs/examples/config/common/prusa.yml
        target: /app/prusa.yml
    ports:
      - "10009:10009"
    command: 
      - "--config.file=/app/prusa.yml"
      - "--prusalink.scrape-interval=20"
    networks:
      - prusa

  prusa_metrics_handler:
    image: pubeldev/prusa_metrics_handler:0.1.1
    container_name: prusa_metrics_handler
    restart: unless-stopped
    command: 
      - "--influx-url=http://influxproxy:8007"
      - "--influx-org=pubeldev"
      - "--influx-bucket=prusa"
      - "--influx-token=null"
    ports:
      - 10011:10011
      - 8514:8514/udp
    depends_on:
      - influxproxy
    networks:
      - prusa

  influxproxy:
    build: 
      context: https://github.com/grafana/influx2cortex.git#9be4cafaefe490d61ec2d1e203631741fdf5c59d # better safe than sorry
      network: host
      dockerfile_inline: |
        FROM golang:1.23-alpine as build
        RUN apk add --update --no-cache git coreutils
        WORKDIR /go/src/github.com/grafana/influx2cortex
        COPY . .
        RUN go mod download
        RUN go build -o /bin/influx2cortex ./cmd/influx2cortex
        FROM alpine:3.12
        RUN apk add --update --no-cache ca-certificates
        RUN addgroup -g 1000 app && \
          adduser -u 1000 -h /app -G app -S app
        WORKDIR /app
        USER app
        COPY --from=build /bin/influx2cortex /bin/influx2cortex
        ENTRYPOINT [ "/bin/influx2cortex" ]
    container_name: influxproxy
    entrypoint: 
    - "/bin/influx2cortex"
    - "-auth.enable=false"
    - "-server.http-listen-port=8007"
    - "-write-endpoint=http://prometheus:9090/api/v1/write"
    pull_policy: build
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - prusa